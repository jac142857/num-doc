<div class="col-md-9" id="content">


    <p>The <code class="language-plaintext highlighter-rouge">admin</code> API gives you access to several non-standard RPC methods, which will allow you to have
        a fine grained control over your Geth instance, including but not limited to network peer and RPC
        endpoint management.</p>

    <ul id="markdown-toc">
        <li><a href="#admin_addpeer" id="markdown-toc-admin_addpeer">admin_addPeer</a>    <ul>
                <li><a href="#example" id="markdown-toc-example">Example</a></li>
            </ul>
        </li>
        <li><a href="#admin_datadir" id="markdown-toc-admin_datadir">admin_datadir</a>    <ul>
                <li><a href="#example-1" id="markdown-toc-example-1">Example</a></li>
            </ul>
        </li>
        <li><a href="#admin_nodeinfo" id="markdown-toc-admin_nodeinfo">admin_nodeInfo</a>    <ul>
                <li><a href="#example-2" id="markdown-toc-example-2">Example</a></li>
            </ul>
        </li>
        <li><a href="#admin_peers" id="markdown-toc-admin_peers">admin_peers</a>    <ul>
                <li><a href="#example-3" id="markdown-toc-example-3">Example</a></li>
            </ul>
        </li>
        <li><a href="#admin_startrpc" id="markdown-toc-admin_startrpc">admin_startRPC</a>    <ul>
                <li><a href="#example-4" id="markdown-toc-example-4">Example</a></li>
            </ul>
        </li>
        <li><a href="#admin_startws" id="markdown-toc-admin_startws">admin_startWS</a>    <ul>
                <li><a href="#example-5" id="markdown-toc-example-5">Example</a></li>
            </ul>
        </li>
        <li><a href="#admin_stoprpc" id="markdown-toc-admin_stoprpc">admin_stopRPC</a>    <ul>
                <li><a href="#example-6" id="markdown-toc-example-6">Example</a></li>
            </ul>
        </li>
        <li><a href="#admin_stopws" id="markdown-toc-admin_stopws">admin_stopWS</a>    <ul>
                <li><a href="#example-7" id="markdown-toc-example-7">Example</a></li>
            </ul>
        </li>
    </ul>

    <h3 id="admin_addpeer">admin_addPeer</h3>

    <p>The <code class="language-plaintext highlighter-rouge">addPeer</code> administrative method requests adding a new remote node to the list of tracked static
        nodes. The node will try to maintain connectivity to these nodes at all times, reconnecting every
        once in a while if the remote connection goes down.</p>

    <p>The method accepts a single argument, the <a href="https://github.com/ethereum/wiki/wiki/enode-url-format"><code class="language-plaintext highlighter-rouge">enode</code></a>
        URL of the remote peer to start tracking and returns a <code class="language-plaintext highlighter-rouge">BOOL</code> indicating whether the peer was accepted
        for tracking or some error occurred.</p>

    <table>
        <thead>
        <tr>
            <th style="text-align: left">Client</th>
            <th>Method invocation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="text-align: left">Go</td>
            <td><code class="language-plaintext highlighter-rouge">admin.AddPeer(url string) (bool, error)</code></td>
        </tr>
        <tr>
            <td style="text-align: left">Console</td>
            <td><code class="language-plaintext highlighter-rouge">admin.addPeer(url)</code></td>
        </tr>
        <tr>
            <td style="text-align: left">RPC</td>
            <td><code class="language-plaintext highlighter-rouge">{"method": "admin_addPeer", "params": [url]}</code></td>
        </tr>
        </tbody>
    </table>

    <h4 id="example">Example</h4>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="nx">admin</span><span class="p">.</span><span class="nx">addPeer</span><span class="p">(</span><span class="dl">"</span><span class="s2">enode://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@52.16.188.185:30303</span><span class="dl">"</span><span class="p">)</span>
<span class="kc">true</span>
</code></pre></div></div>

    <h3 id="admin_datadir">admin_datadir</h3>

    <p>The <code class="language-plaintext highlighter-rouge">datadir</code> administrative property can be queried for the absolute path the running Geth node
        currently uses to store all its databases.</p>

    <table>
        <thead>
        <tr>
            <th style="text-align: left">Client</th>
            <th>Method invocation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="text-align: left">Go</td>
            <td><code class="language-plaintext highlighter-rouge">admin.Datadir() (string, error</code>)</td>
        </tr>
        <tr>
            <td style="text-align: left">Console</td>
            <td><code class="language-plaintext highlighter-rouge">admin.datadir</code></td>
        </tr>
        <tr>
            <td style="text-align: left">RPC</td>
            <td><code class="language-plaintext highlighter-rouge">{"method": "admin_datadir"}</code></td>
        </tr>
        </tbody>
    </table>

    <h4 id="example-1">Example</h4>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="nx">admin</span><span class="p">.</span><span class="nx">datadir</span>
<span class="dl">"</span><span class="s2">/home/john/.ethereum</span><span class="dl">"</span>
</code></pre></div></div>

    <h3 id="admin_nodeinfo">admin_nodeInfo</h3>

    <p>The <code class="language-plaintext highlighter-rouge">nodeInfo</code> administrative property can be queried for all the information known about the running
        Geth node at the networking granularity. These include general information about the node itself as a
        participant of the <a href="https://github.com/ethereum/wiki/wiki/%C3%90%CE%9EVp2p-Wire-Protocol">ÐΞVp2p</a> P2P
        overlay protocol, as well as specialized information added by each of the running application protocols
        (e.g. <code class="language-plaintext highlighter-rouge">eth</code>, <code class="language-plaintext highlighter-rouge">les</code>, <code class="language-plaintext highlighter-rouge">shh</code>, <code class="language-plaintext highlighter-rouge">bzz</code>).</p>

    <table>
        <thead>
        <tr>
            <th style="text-align: left">Client</th>
            <th>Method invocation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="text-align: left">Go</td>
            <td><code class="language-plaintext highlighter-rouge">admin.NodeInfo() (*p2p.NodeInfo, error</code>)</td>
        </tr>
        <tr>
            <td style="text-align: left">Console</td>
            <td><code class="language-plaintext highlighter-rouge">admin.nodeInfo</code></td>
        </tr>
        <tr>
            <td style="text-align: left">RPC</td>
            <td><code class="language-plaintext highlighter-rouge">{"method": "admin_nodeInfo"}</code></td>
        </tr>
        </tbody>
    </table>

    <h4 id="example-2">Example</h4>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="nx">admin</span><span class="p">.</span><span class="nx">nodeInfo</span>
<span class="p">{</span>
  <span class="nl">enode</span><span class="p">:</span> <span class="dl">"</span><span class="s2">enode://44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d@[::]:30303</span><span class="dl">"</span><span class="p">,</span>
  <span class="nx">id</span><span class="p">:</span> <span class="dl">"</span><span class="s2">44826a5d6a55f88a18298bca4773fca5749cdc3a5c9f308aa7d810e9b31123f3e7c5fba0b1d70aac5308426f47df2a128a6747040a3815cc7dd7167d03be320d</span><span class="dl">"</span><span class="p">,</span>
  <span class="nx">ip</span><span class="p">:</span> <span class="dl">"</span><span class="s2">::</span><span class="dl">"</span><span class="p">,</span>
  <span class="nx">listenAddr</span><span class="p">:</span> <span class="dl">"</span><span class="s2">[::]:30303</span><span class="dl">"</span><span class="p">,</span>
  <span class="nx">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Geth/v1.5.0-unstable/linux/go1.6</span><span class="dl">"</span><span class="p">,</span>
  <span class="nx">ports</span><span class="p">:</span> <span class="p">{</span>
    <span class="nl">discovery</span><span class="p">:</span> <span class="mi">30303</span><span class="p">,</span>
    <span class="nx">listener</span><span class="p">:</span> <span class="mi">30303</span>
  <span class="p">},</span>
  <span class="nx">protocols</span><span class="p">:</span> <span class="p">{</span>
    <span class="nl">eth</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">difficulty</span><span class="p">:</span> <span class="mi">17334254859343145000</span><span class="p">,</span>
      <span class="na">genesis</span><span class="p">:</span> <span class="dl">"</span><span class="s2">0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3</span><span class="dl">"</span><span class="p">,</span>
      <span class="na">head</span><span class="p">:</span> <span class="dl">"</span><span class="s2">0xb83f73fbe6220c111136aefd27b160bf4a34085c65ba89f24246b3162257c36a</span><span class="dl">"</span><span class="p">,</span>
      <span class="na">network</span><span class="p">:</span> <span class="mi">1</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

    <h3 id="admin_peers">admin_peers</h3>

    <p>The <code class="language-plaintext highlighter-rouge">peers</code> administrative property can be queried for all the information known about the connected
        remote nodes at the networking granularity. These include general information about the nodes themselves
        as participants of the <a href="https://github.com/ethereum/wiki/wiki/%C3%90%CE%9EVp2p-Wire-Protocol">ÐΞVp2p</a>
        P2P overlay protocol, as well as specialized information added by each of the running application
        protocols (e.g. <code class="language-plaintext highlighter-rouge">eth</code>, <code class="language-plaintext highlighter-rouge">les</code>, <code class="language-plaintext highlighter-rouge">shh</code>, <code class="language-plaintext highlighter-rouge">bzz</code>).</p>

    <table>
        <thead>
        <tr>
            <th style="text-align: left">Client</th>
            <th>Method invocation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="text-align: left">Go</td>
            <td><code class="language-plaintext highlighter-rouge">admin.Peers() ([]*p2p.PeerInfo, error</code>)</td>
        </tr>
        <tr>
            <td style="text-align: left">Console</td>
            <td><code class="language-plaintext highlighter-rouge">admin.peers</code></td>
        </tr>
        <tr>
            <td style="text-align: left">RPC</td>
            <td><code class="language-plaintext highlighter-rouge">{"method": "admin_peers"}</code></td>
        </tr>
        </tbody>
    </table>

    <h4 id="example-3">Example</h4>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="nx">admin</span><span class="p">.</span><span class="nx">peers</span>
<span class="p">[{</span>
    <span class="na">caps</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">eth/61</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">eth/62</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">eth/63</span><span class="dl">"</span><span class="p">],</span>
    <span class="na">id</span><span class="p">:</span> <span class="dl">"</span><span class="s2">08a6b39263470c78d3e4f58e3c997cd2e7af623afce64656cfc56480babcea7a9138f3d09d7b9879344c2d2e457679e3655d4b56eaff5fd4fd7f147bdb045124</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Geth/v1.5.0-unstable/linux/go1.5.1</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">network</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">localAddress</span><span class="p">:</span> <span class="dl">"</span><span class="s2">192.168.0.104:51068</span><span class="dl">"</span><span class="p">,</span>
      <span class="na">remoteAddress</span><span class="p">:</span> <span class="dl">"</span><span class="s2">71.62.31.72:30303</span><span class="dl">"</span>
    <span class="p">},</span>
    <span class="na">protocols</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">eth</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">difficulty</span><span class="p">:</span> <span class="mi">17334052235346465000</span><span class="p">,</span>
        <span class="na">head</span><span class="p">:</span> <span class="dl">"</span><span class="s2">5794b768dae6c6ee5366e6ca7662bdff2882576e09609bf778633e470e0e7852</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">version</span><span class="p">:</span> <span class="mi">63</span>
      <span class="p">}</span>
    <span class="p">}</span>
<span class="p">},</span> <span class="cm">/* ... */</span> <span class="p">{</span>
    <span class="na">caps</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">eth/61</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">eth/62</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">eth/63</span><span class="dl">"</span><span class="p">],</span>
    <span class="na">id</span><span class="p">:</span> <span class="dl">"</span><span class="s2">fcad9f6d3faf89a0908a11ddae9d4be3a1039108263b06c96171eb3b0f3ba85a7095a03bb65198c35a04829032d198759edfca9b63a8b69dc47a205d94fce7cc</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Geth/v1.3.5-506c9277/linux/go1.4.2</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">network</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">localAddress</span><span class="p">:</span> <span class="dl">"</span><span class="s2">192.168.0.104:55968</span><span class="dl">"</span><span class="p">,</span>
      <span class="na">remoteAddress</span><span class="p">:</span> <span class="dl">"</span><span class="s2">121.196.232.205:30303</span><span class="dl">"</span>
    <span class="p">},</span>
    <span class="na">protocols</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">eth</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">difficulty</span><span class="p">:</span> <span class="mi">17335165914080772000</span><span class="p">,</span>
        <span class="na">head</span><span class="p">:</span> <span class="dl">"</span><span class="s2">5794b768dae6c6ee5366e6ca7662bdff2882576e09609bf778633e470e0e7852</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">version</span><span class="p">:</span> <span class="mi">63</span>
      <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}]</span>
</code></pre></div></div>

    <h3 id="admin_startrpc">admin_startRPC</h3>

    <p>The <code class="language-plaintext highlighter-rouge">startRPC</code> administrative method starts an HTTP based <a href="https://www.jsonrpc.org/specification">JSON RPC</a>
        API webserver to handle client requests. All the parameters are optional:</p>

    <ul>
        <li><code class="language-plaintext highlighter-rouge">host</code>: network interface to open the listener socket on (defaults to <code class="language-plaintext highlighter-rouge">"localhost"</code>)</li>
        <li><code class="language-plaintext highlighter-rouge">port</code>: network port to open the listener socket on (defaults to <code class="language-plaintext highlighter-rouge">8545</code>)</li>
        <li><code class="language-plaintext highlighter-rouge">cors</code>: <a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">cross-origin resource sharing</a> header to use (defaults to <code class="language-plaintext highlighter-rouge">""</code>)</li>
        <li><code class="language-plaintext highlighter-rouge">apis</code>: API modules to offer over this interface (defaults to <code class="language-plaintext highlighter-rouge">"eth,net,web3"</code>)</li>
    </ul>

    <p>The method returns a boolean flag specifying whether the HTTP RPC listener was opened or not. Please note, only one HTTP endpoint is allowed to be active at any time.</p>

    <table>
        <thead>
        <tr>
            <th style="text-align: left">Client</th>
            <th>Method invocation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="text-align: left">Go</td>
            <td><code class="language-plaintext highlighter-rouge">admin.StartRPC(host *string, port *rpc.HexNumber, cors *string, apis *string) (bool, error)</code></td>
        </tr>
        <tr>
            <td style="text-align: left">Console</td>
            <td><code class="language-plaintext highlighter-rouge">admin.startRPC(host, port, cors, apis)</code></td>
        </tr>
        <tr>
            <td style="text-align: left">RPC</td>
            <td><code class="language-plaintext highlighter-rouge">{"method": "admin_startRPC", "params": [host, port, cors, apis]}</code></td>
        </tr>
        </tbody>
    </table>

    <h4 id="example-4">Example</h4>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="nx">admin</span><span class="p">.</span><span class="nx">startRPC</span><span class="p">(</span><span class="dl">"</span><span class="s2">127.0.0.1</span><span class="dl">"</span><span class="p">,</span> <span class="mi">8545</span><span class="p">)</span>
<span class="kc">true</span>
</code></pre></div></div>

    <h3 id="admin_startws">admin_startWS</h3>

    <p>The <code class="language-plaintext highlighter-rouge">startWS</code> administrative method starts an WebSocket based <a href="https://www.jsonrpc.org/specification">JSON RPC</a>
        API webserver to handle client requests. All the parameters are optional:</p>

    <ul>
        <li><code class="language-plaintext highlighter-rouge">host</code>: network interface to open the listener socket on (defaults to <code class="language-plaintext highlighter-rouge">"localhost"</code>)</li>
        <li><code class="language-plaintext highlighter-rouge">port</code>: network port to open the listener socket on (defaults to <code class="language-plaintext highlighter-rouge">8546</code>)</li>
        <li><code class="language-plaintext highlighter-rouge">cors</code>: <a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">cross-origin resource sharing</a> header to use (defaults to <code class="language-plaintext highlighter-rouge">""</code>)</li>
        <li><code class="language-plaintext highlighter-rouge">apis</code>: API modules to offer over this interface (defaults to <code class="language-plaintext highlighter-rouge">"eth,net,web3"</code>)</li>
    </ul>

    <p>The method returns a boolean flag specifying whether the WebSocket RPC listener was opened or not. Please note, only one WebSocket endpoint is allowed to be active at any time.</p>

    <table>
        <thead>
        <tr>
            <th style="text-align: left">Client</th>
            <th>Method invocation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="text-align: left">Go</td>
            <td><code class="language-plaintext highlighter-rouge">admin.StartWS(host *string, port *rpc.HexNumber, cors *string, apis *string) (bool, error)</code></td>
        </tr>
        <tr>
            <td style="text-align: left">Console</td>
            <td><code class="language-plaintext highlighter-rouge">admin.startWS(host, port, cors, apis)</code></td>
        </tr>
        <tr>
            <td style="text-align: left">RPC</td>
            <td><code class="language-plaintext highlighter-rouge">{"method": "admin_startWS", "params": [host, port, cors, apis]}</code></td>
        </tr>
        </tbody>
    </table>

    <h4 id="example-5">Example</h4>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="nx">admin</span><span class="p">.</span><span class="nx">startWS</span><span class="p">(</span><span class="dl">"</span><span class="s2">127.0.0.1</span><span class="dl">"</span><span class="p">,</span> <span class="mi">8546</span><span class="p">)</span>
<span class="kc">true</span>
</code></pre></div></div>

    <h3 id="admin_stoprpc">admin_stopRPC</h3>

    <p>The <code class="language-plaintext highlighter-rouge">stopRPC</code> administrative method closes the currently open HTTP RPC endpoint. As the node can only have a single HTTP endpoint running, this method takes no parameters, returning a boolean whether the endpoint was closed or not.</p>

    <table>
        <thead>
        <tr>
            <th style="text-align: left">Client</th>
            <th>Method invocation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="text-align: left">Go</td>
            <td><code class="language-plaintext highlighter-rouge">admin.StopRPC() (bool, error</code>)</td>
        </tr>
        <tr>
            <td style="text-align: left">Console</td>
            <td><code class="language-plaintext highlighter-rouge">admin.stopRPC()</code></td>
        </tr>
        <tr>
            <td style="text-align: left">RPC</td>
            <td><code class="language-plaintext highlighter-rouge">{"method": "admin_stopRPC"</code></td>
        </tr>
        </tbody>
    </table>

    <h4 id="example-6">Example</h4>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="nx">admin</span><span class="p">.</span><span class="nx">stopRPC</span><span class="p">()</span>
<span class="kc">true</span>
</code></pre></div></div>

    <h3 id="admin_stopws">admin_stopWS</h3>

    <p>The <code class="language-plaintext highlighter-rouge">stopWS</code> administrative method closes the currently open WebSocket RPC endpoint. As the node can only have a single WebSocket endpoint running, this method takes no parameters, returning a boolean whether the endpoint was closed or not.</p>

    <table>
        <thead>
        <tr>
            <th style="text-align: left">Client</th>
            <th>Method invocation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="text-align: left">Go</td>
            <td><code class="language-plaintext highlighter-rouge">admin.StopWS() (bool, error</code>)</td>
        </tr>
        <tr>
            <td style="text-align: left">Console</td>
            <td><code class="language-plaintext highlighter-rouge">admin.stopWS()</code></td>
        </tr>
        <tr>
            <td style="text-align: left">RPC</td>
            <td><code class="language-plaintext highlighter-rouge">{"method": "admin_stopWS"</code></td>
        </tr>
        </tbody>
    </table>

    <h4 id="example-7">Example</h4>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> <span class="nx">admin</span><span class="p">.</span><span class="nx">stopWS</span><span class="p">()</span>
<span class="kc">true</span>
</code></pre></div></div>

</div>