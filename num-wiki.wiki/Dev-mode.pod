    <div class="col-md-9" id="content">
  
      
      <p>Geth has a development mode that sets up a single node Ethereum test network with options optimized for developing on local machines. You enable it with the <code class="language-plaintext highlighter-rouge">--dev</code> argument.</p>

<p>Starting geth in dev mode does the following:</p>

<ul>
  <li>Initializes the data directory with a testing genesis block</li>
  <li>Sets max peers to 0</li>
  <li>Turns off discovery by other nodes</li>
  <li>Sets the gas price to 0</li>
  <li>Uses the Clique PoA consensus engine with which allows blocks to be mined as-needed without excessive CPU and memory consumption</li>
  <li>Uses on-demand block generation, producing blocks when transactions are waiting to be mined</li>
</ul>

<h2 id="start-geth-in-dev-mode">Start Geth in Dev Mode</h2>

<p>You can specify a data directory to maintain state between runs using the <code class="language-plaintext highlighter-rouge">--datadir</code> option, otherwise, databases are ephemeral and in-memory:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir </span>test-chain-dir
</code></pre></div></div>

<p>For this guide, start geth in dev mode, and enable <a href="https://geth.ethereum.org/_rpc/server.md">RPC</a> so you can connect other applications to geth. For this guide, we use Remix, the web-based Ethereum IDE, so also allow its domains to accept cross-origin requests.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>geth <span class="nt">--datadir</span> test-chain-dir <span class="nt">--http</span> <span class="nt">--dev</span> <span class="nt">--http</span>.corsdomain <span class="s2">"https://remix.ethereum.org,http://remix.ethereum.org"</span>
</code></pre></div></div>

<p>Connect to the IPC console on the node from another terminal window:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>geth attach &lt;IPC_LOCATION&gt;
</code></pre></div></div>

<p>Once geth is running in dev mode, you can interact with it in the same way as when geth is running in other ways.</p>

<p>For example, create a test account:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> personal.newAccount<span class="o">()</span>
</code></pre></div></div>

<p>And transfer ether from the coinbase to the new account:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> eth.sendTransaction<span class="o">({</span>from:eth.coinbase, to:eth.accounts[1], value: web3.toWei<span class="o">(</span>0.05, <span class="s2">"ether"</span><span class="o">)})</span>
</code></pre></div></div>

<p>And check the balance of the account:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> eth.getBalance<span class="o">(</span>eth.accounts[1]<span class="o">)</span>
</code></pre></div></div>

<p>If you want to test your dapps with a realistic block time use the <code class="language-plaintext highlighter-rouge">--dev.period</code> option when you start dev mode with the <code class="language-plaintext highlighter-rouge">--dev.period 14</code> argument.</p>

<h2 id="connect-remix-to-geth">Connect Remix to Geth</h2>

<p>With geth now running, open <a href="https://remix.ethereum.org/">https://remix.ethereum.org</a>. Compile the contract as normal,
but when you deploy and run a contract, select <em>Web3 Provider</em> from the <em>Environment</em>
dropdown, and add “http://127.0.0.1:8545” to the popup box. Click <em>Deploy</em>, and interact
with the contract. You should see contract creation, mining, and transaction activity.</p>

    </div>